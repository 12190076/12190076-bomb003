
/*
#ITS304-CS1
#Computer Systems I
#Assignment 1
#12190076
*/


***********
1. Overview
***********

A "binary bomb" is a Linux executable C program that consists of six
"phases." Each phase expects the student to enter a particular string
on stdin.  If the student enters the expected string, then that phase
is "defused."  Otherwise the bomb "explodes" by printing "BOOM!!!".
The goal for the students is to defuse as many phases as possible.

Each bomb phase tests a different aspect of machine language programs such as:
  Phase 1: string comparison
  Phase 2: loops
  Phase 3: conditionals/switches
  Phase 4: ?
  Phase 5: ?
  Phase 6: ?

Procedure:
Before you begain to defuse the bomb we need to install gdb in our system.
What is GDB?
GDB, the GNU Project debugger, allows you to see what is going on `inside'
another program while it executes.

The best way to defuse your bomb is to use gdb to step through its disassembled 
binary.

****Using objdump -d bomb > bomb.s we are able to look at all the assembly code present in bomb.c*******

You can start the debugger with:
$ gdb bomb

*******
Phase 1-------
*******

For the Phase 1 solution we have got two approach:
1. Direct approach
2. By debugging the assemble code

1. Direct Approach
	- For this approach you just need to command as strings bomb 
	which bassically display all the string that are present in 
	bomb file as show below:

$ strings bomb
	/lib64/ld-linux-x86-64.so.2
	libc.so.6
	socket
	fflush
	strcpy
	__printf_chk
	exit
	fopen
	__isoc99_sscanf
	connect
	signal
	puts
	__stack_chk_fail
	stdin
	strtol
	----
	----
	----
	%s: Error: Couldn't open %s
	Usage: %s [<input_file>]
	That's number 2.  Keep going!
	Halfway there!
	Good work!  On to the next...
	Welcome to my fiendish little bomb. You have 6 phases with
	which to blow yourself up. Have a nice day!
	Phase 1 defused. How about the next one?
	So you got that one.  Try this one.
	Border relations with Canada have never been better.    //Here is the string
	Wow! You've defused the secret stage!
	So you think you can stop the bomb with ctrl-c, do you?
	Curses, you've found the secret phase!
	But finding it and solving it are quite different...
	Congratulations! You've defused the bomb!
	Well...
	OK. :-)
	Invalid phase%s
	BOOM!!!
	The bomb has blown up.
	%d %d %d %d %d %d
	Error: Premature EOF on stdin
	GRADE_BOMB
	Error: Input line too long
	%d %d %s
	DrEvil
	greatwhite.ics.cs.cmu.edu
	angelshark.ics.cs.cmu.edu
	makoshark.ics.cs.cmu.edu
	-----
	-----
	-----


2. By debugging the assemble code

	For these process you need to use gdb and set up break point(if you want the program to stop at a certain point):

	
	(gdb) break phase_1
	Breakpoint 1 at 0x400e8d
	(gdb) run
	Starting program: /home/sonam/Downloads/Assignment 1(1)/Assignment 1/bomb003/bomb 
	Welcome to my fiendish little bomb. You have 6 phases with
	which to blow yourself up. Have a nice day!
	try

	Breakpoint 1, 0x0000000000400e8d in phase_1 ()
	(gdb) disas
	Dump of assembler code for function phase_1:
	     => 0x0000000000400e8d <+0>:	sub    $0x8,%rsp
 		0x0000000000400e91 <+4>:	mov    $0x4023b0,%esi
  		0x0000000000400e96 <+9>:	call   0x40132b <strings_not_equal>
   		0x0000000000400e9b <+14>:	test   %eax,%eax
   		0x0000000000400e9d <+16>:	je     0x400ea4 <phase_1+23>
   		0x0000000000400e9f <+18>:	call   0x40142a <explode_bomb>
   		0x0000000000400ea4 <+23>:	add    $0x8,%rsp
   		0x0000000000400ea8 <+27>:	ret    
	End of assembler dump.
	
	//Lets examine what is being moved from address 0x4023b0. We know it has to be a string of some sort so we use '/s'
	
	(gdb) x/s 0x4023b0
	0x4023b0:	"Border relations with Canada have never been better."
	(gdb) 
	
	Solution :
	
	(gdb) run
		The program being debugged has been started already.
		Start it from the beginning? (y or n) y
		Starting program: /home/sonam/Downloads/Assignment 1(1)/Assignment 1/bomb003/bomb 
		Welcome to my fiendish little bomb. You have 6 phases with
		which to blow yourself up. Have a nice day!
		Border relations with Canada have never been better.
		Phase 1 defused. How about the next one?
		
	Hence the  the solution is Border relations with Canada have never been better.
